{"version":3,"sources":["shared/hooks/auth-hook.js","shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","user/pages/Users.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","shared/context/auth-context.js","dishes/pages/NewDish.js","shared/components/UIElements/Map.js","dishes/components/DishItem.js","dishes/components/DishList.js","dishes/pages/UserDishes.js","dishes/pages/UpdateDish.js","user/pages/Auth.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["logoutTimer","Avatar","props","className","style","src","image","alt","width","height","Card","children","UserItem","to","id","process","name","dishCount","UsersList","items","length","map","user","key","dishes","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Users","loadedUsers","setLoadedUsers","users","fetchUsers","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","click","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","AuthContext","createContext","isLoggedIn","userId","token","login","logout","NewDish","auth","useContext","title","description","address","stars","inputHandler","history","useHistory","dishSubmitHandler","formData","FormData","append","Authorization","Map","mapRef","zoom","window","google","maps","Marker","position","DishItem","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","onDelete","coordinates","count","creatorId","DishList","dish","creator","location","onDeleteDish","UserDishes","loadedDishes","setLoadedDishes","useParams","fetchDishes","deletedDishId","prevDishes","UpdateDish","loadedDish","setLoadedDish","dishId","setFormData","fetchDish","dishUpdateSubmitHandler","JSON","stringify","Auth","isLoginMode","setIsLoginMode","email","password","authSubmitHandler","autocomplete","undefined","prevMode","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","render"],"mappings":"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","file":"static/js/main.7834f47c.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth  = () => {\n    const [token, setToken] = useState(false);\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\n    const [userId, setUserId] = useState(false);\n\n    const login = useCallback((uid, token, expirationDate) => {\n        setToken(token);\n        setUserId(uid);\n      const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 24);\n        setTokenExpirationDate(tokenExpirationDate);\n        localStorage.setItem('userData', JSON.stringify({userId: uid, token: token, expiration: tokenExpirationDate.toISOString()}));\n    }, []);\n    \n    const logout = useCallback(() => {\n        setToken(null);\n        setTokenExpirationDate(null);\n        setUserId(null);\n        localStorage.removeItem('userData');\n    }, []);\n\n    useEffect(() => {\n        if (token && tokenExpirationDate) {\n        const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n        logoutTimer = setTimeout(logout, remainingTime);\n        } else {\n        clearTimeout(logoutTimer);\n        }\n    }, [token, logout, tokenExpirationDate]);\n\n    useEffect(() => {\n        const storedData = JSON.parse(localStorage.getItem('userData'));\n        if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n        login(storedData.userId, storedData.token, new Date(storedData.expiration));\n        }\n    }, [login]);\n    \n    return { token, login, logout, userId };\n};","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UserItem.css';\n\nconst UserItem = props => {\n    return (\n        <li className=\"user-item\">\n            <Card className=\"user-item__content\">\n                <Link to ={`/${props.id}/dishes`}> \n                    <div className=\"user-item__image\">\n                        <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\n                    </div>\n                    <div className=\"user-item__info\">\n                        <h2>{props.name}</h2>\n                        <h3>{props.dishCount} {props.dishCount === 1 ? 'Dish' : 'Dishes'}</h3>\n                    </div>\n                </Link>\n            </Card>\n        </li>\n    );\n};\n\nexport default UserItem;","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css'\n\nconst UsersList = props => {\n    if (props.items.length === 0) {\n        return (\n        <div className=\"center\">\n            <Card>\n                <h2>No users found.</h2>\n            </Card>\n        </div>\n        );\n    } \n\n    return (\n        <ul className=\"users-list\">\n            {props.items.map(user => (\n                <UserItem \n                key={user.id}\n                id={user.id}\n                image={user.image}\n                name={user.name}\n                dishCount={user.dishes.length}\n                />\n            ))}\n        </ul>\n    );\n};\n\nexport default UsersList;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n    const content = (\n        <div className={`modal ${props.className}`} style={props.style}>\n            <header className={`modal__header ${props.headerClass}`}>\n                <h2>{props.header}</h2>\n            </header>\n            <form onSubmit={props.onSubmit ? props.onSubmit : event => event.preventDefault()}>\n                <div className={`modal__content ${props.contentClass}`}>\n                    {props.children}\n                </div>\n                <footer className={`modal__footer ${props.footerClass}`}>\n                    {props.footer}\n                </footer>\n            </form>\n\n        </div>\n    );\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'))\n};\n\nconst Modal = props => {\n    return <React.Fragment>\n        {props.show && <Backdrop onClick={props.onCancel} />}\n        <CSSTransition \n            in={props.show} \n            mountOnEnter \n            unmountOnExit \n            timeout={200} \n            classNames=\"modal\"\n            >\n            <ModalOverlay {...props} />\n        </CSSTransition>\n    </React.Fragment>\n};\n\nexport default Modal;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState();\n\n    const activeHttpRequests = useRef([]);\n    \n    const sendRequest = useCallback(\n        async (url, method = 'GET', body = null, headers = {}) => {\n        setIsLoading(true);\n        const httpAbortCtrl = new AbortController();\n        activeHttpRequests.current.push(httpAbortCtrl);\n\n        try {\n            const response = await fetch(url, {\n                method,\n                body,\n                headers,\n                signal: httpAbortCtrl.signal\n            });\n\n            const responseData = await response.json();\n\n            activeHttpRequests.current = activeHttpRequests.current.filter(\n                reqCtrl => reqCtrl !== httpAbortCtrl\n            );\n\n            if (!response.ok) {\n                throw new Error(responseData.message);\n            }\n            \n            setIsLoading(false);\n            return responseData;\n        } catch (err) {\n            setError(err.message);\n            setIsLoading(false);\n            throw err;\n        }\n    }, \n    []\n    ); \n\n        const clearError = () => {\n            setError(null);\n        };\n\n        useEffect(() => {\n            return () => {\n                activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n            };\n        }, []);\n\n    return { isLoading, error, sendRequest, clearError };\n};","import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Users = () => {\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    const [loadedUsers, setLoadedUsers] = useState();\n\n    useEffect(() => {\n        const fetchUsers = async () => {\n            try {\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users`);\n\n                setLoadedUsers(responseData.users);\n            } catch (err) {}\n        };\n        fetchUsers();\n    }, [sendRequest]);\n\n    return (\n        <React.Fragment>\n            <ErrorModal error ={error} onClear={clearError} />\n            {isLoading && (\n                <div className=\"center\">\n                    <LoadingSpinner />\n                </div>\n            )}\n            {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n        </React.Fragment>\n    );\n};\n\nexport default Users;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n    switch (action.type) {\n        case 'CHANGE':\n            return {\n                ...state,\n                value: action.val,\n                isValid: validate(action.val, action.validators)\n            };\n        case 'TOUCH': {\n            return {\n                ...state,\n                isTouched: true\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nconst Input = props => {\n    const [inputState, dispatch] = useReducer(inputReducer, {\n        value: props.initialValue || '',\n        isTouched: false, \n        isValid: props.initialValid || false\n    });\n\n    const { id, onInput } = props;\n    const { value, isValid } = inputState;\n\n    useEffect(() => {\n        onInput(id, value, isValid)\n    }, [id, value, isValid, onInput]);\n\n    const changeHandler = event => {\n        dispatch({\n            type: 'CHANGE', \n            val: event.target.value,\n            validators: props.validators\n        });\n    };\n\n    const touchHandler = () => {\n        dispatch({\n            type: 'TOUCH'\n        });\n    };\n\n    const element = \n        props.element === 'input' ? (\n                <input \n                id={props.id} \n                type={props.type} \n                placeholder={props.placeholder}\n                onChange={changeHandler}\n                onBlur={touchHandler}\n                value={inputState.value}\n                />\n            ) : (\n                <textarea \n                id={props.id} \n                rows={props.rows || 3}\n                onChange={changeHandler}\n                onBlur={touchHandler}\n                value={inputState.value}\n                />\n            );\n\n    return (\n        <div \n            className={`form-control ${!inputState.isValid && inputState.isTouched &&\n            'form-control--invalid'}`}\n        >\n            <label htmlFor={props.id}>{props.label}</label>\n            {element}\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n        </div>\n    );\n};\n\nexport default Input;","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n    const [file, setFile] = useState();\n    const [previewUrl, setPreviewUrl] = useState();\n    const [isValid, setIsValid] = useState(false);\n\n    const filePickerRef = useRef();\n\n    useEffect(() => {\n        if (!file) {\n            return;\n        }\n        const fileReader = new FileReader();\n        fileReader.onload = () => {\n            setPreviewUrl(fileReader.result);\n        };\n        fileReader.readAsDataURL(file);\n    }, [file]);\n\n    const pickedHandler = event => {\n        let pickedFile;\n        let fileIsValid = isValid;\n        if (event.target.files && event.target.files.length === 1) {\n            pickedFile = event.target.files[0];\n            setFile(pickedFile);\n            setIsValid(true);\n            fileIsValid = true;\n        } else {\n            setIsValid(false);\n            fileIsValid = false;\n        }\n        props.onInput(props.id, pickedFile, fileIsValid)\n    };\n\n    const pickImageHandler = () => {\n        filePickerRef.current.click();\n    };\n\n    return (\n        <div className=\"form-control\">\n            <input\n                id={props.id}\n                ref={filePickerRef}\n                style={{ display: 'none' }}\n                type=\"file\"\n                accept=\".jpg,.png,.jpeg\"\n                onChange={pickedHandler}\n            />\n            <div className={`image-upload ${props.center && 'center'}`}>\n                <div className=\"image-upload__preview\">\n                    {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n                    {!previewUrl && <p>Please pick an image.</p>}\n                </div>\n                <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\n            </div>\n            {!isValid && <p>{props.errorText}</p>}\n        </div>\n    );\n};\n\nexport default ImageUpload;","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true;\n            for (const inputId in state.inputs) {\n                if (!state.inputs[inputId]) {\n                    continue;\n                }\n                if (inputId === action.inputId) {\n                    formIsValid = formIsValid && action.isValid;\n                } else {\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\n                }\n            }\n            return {\n                ...state,\n                inputs: {\n                    ...state.inputs,\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\n                },\n                isValid: formIsValid\n            };\n        case 'SET_DATA':\n            return {\n                inputs: action.inputs,\n                isValid: action.formIsValid\n            };\n        default:\n            return state;\n    }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: initialInputs,\n        isValid: initialFormValidity\n    });\n    \n    const inputHandler = useCallback((id, value, isValid) => {\n        dispatch({\n            type: 'INPUT_CHANGE', \n            value: value, \n            isValid: isValid, \n            inputId: id\n        });\n    }, []);\n        \n    const setFormData = useCallback((inputData, formValidity) => {\n        dispatch({\n            type: 'SET_DATA',\n            inputs: inputData,\n            formIsValid: formValidity\n        });\n    }, []);\n\n        return [formState, inputHandler, setFormData];\n};","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n    isLoggedIn: false,\n    userId: null,\n    token: null,\n    login: () => {}, \n    logout: () => {} \n});\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport { \n    VALIDATOR_MINLENGTH, \n    VALIDATOR_REQUIRE \n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nimport './DishForm.css';\n\nconst NewDish = () => {\n    const auth = useContext(AuthContext);\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    const [formState, inputHandler] = useForm(\n        {\n            title: {\n                value: '',\n                isValid: false\n            },\n            description: {\n                value: '',\n                isValid: false\n            },\n            address: {\n                value: '',\n                isValid: false\n            },\n            stars: {\n                value: '',\n                isValid: false\n            },\n            name: {\n                value: '',\n                isValid: false\n            },\n            image: {\n                value: null,\n                isValid: false\n            }\n        }, false\n    );\n\n    const history = useHistory();\n    \n    const dishSubmitHandler = async event => {\n        event.preventDefault();\n        try {\n            const formData = new FormData();\n            formData.append('title', formState.inputs.title.value);\n            formData.append('description', formState.inputs.description.value);\n            formData.append('address', formState.inputs.address.value);\n            formData.append('stars', formState.inputs.stars.value);\n            formData.append('name', formState.inputs.name.value);\n            formData.append('image', formState.inputs.image.value);\n            await sendRequest(\n                `${process.env.REACT_APP_BACKEND_URL}/dishes`, \n                'POST',\n                formData,\n                {Authorization: 'Bearer ' + auth.token}\n            );\n            history.push('/');\n        } catch (err) {}\n    };\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            <form className=\"dish-form\" onSubmit={dishSubmitHandler}>\n                {isLoading && <LoadingSpinner asOverlay />}\n                <Input\n                    id=\"title\" \n                    element=\"input\" \n                    type=\"text\" \n                    label=\"Restaurant Name\" \n                    validators={[VALIDATOR_REQUIRE()]} \n                    errorText=\"Please enter a valid title.\"\n                    onInput={inputHandler}\n                />\n                <Input\n                    id=\"name\" \n                    element=\"input\" \n                    type=\"text\" \n                    label=\"Dish Name\" \n                    validators={[VALIDATOR_REQUIRE()]} \n                    errorText=\"Please enter a valid dish name.\"\n                    onInput={inputHandler}\n                />\n                <Input \n                    id=\"description\"\n                    element=\"textarea\" \n                    label=\"Description\" \n                    validators={[VALIDATOR_MINLENGTH(5)]} \n                    errorText=\"Please enter a valid description (at least 5 characters).\"\n                    onInput={inputHandler}\n                />\n                <Input\n                    id=\"address\" \n                    element=\"input\" \n                    label=\"Address\" \n                    validators={[VALIDATOR_REQUIRE()]} \n                    errorText=\"Please enter a valid address.\"\n                    onInput={inputHandler}\n                />\n                <Input\n                    id=\"stars\" \n                    element=\"input\" \n                    label=\"Star Rating 1 - 5\" \n                    validators={[VALIDATOR_MINLENGTH(1)]} \n                    errorText=\"Please enter a number 1 to 5.\"\n                    onInput={inputHandler}\n                />\n                <ImageUpload \n                    id=\"image\" \n                    onInput={inputHandler}\n                    errorText=\"Please provide an image.\"\n                />\n                <Button type=\"submit\" disabled={!formState.isValid}>\n                    ADD DISH\n                </Button>\n            </form>\n        </React.Fragment>\n    );\n};\n\nexport default NewDish;","import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n    const mapRef = useRef();\n\n    const { center, zoom } = props;\n\n    useEffect(() => {\n        const map = new window.google.maps.Map(mapRef.current, {\n            center: center,\n            zoom: zoom\n        });\n\n        new window.google.maps.Marker({ position: center, map: map });\n    }, [center, zoom]);\n\n    return (\n    <div \n        ref={mapRef} \n        className={`map ${props.className}`} \n        style={props.style}\n    ></div>\n    );\n};\n\nexport default Map;","import React, { useState, useContext } from \"react\";\nimport ReactStars from \"react-stars\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport Map from \"../../shared/components/UIElements/Map\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport \"./DishItem.css\";\n\nconst DishItem = (props) => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/dishes/${props.id}`,\n        \"DELETE\",\n        null,\n        {\n          Authorization: \"Bearer \" + auth.token,\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"dish-item__modal-content\"\n        footerClass=\"dish-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"dish-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this dish? Please note that it can't\n          be undone.\n        </p>\n      </Modal>\n      <li className=\"dish-item\">\n        <Card className=\"dish-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"dish-item__image\">\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.title}\n            />\n          </div>\n          <div className=\"dish-item__info\">\n            <h2>{props.name}</h2>\n            <ReactStars className=\"center\" count={5} value={props.stars} />\n            <h4>{props.title}</h4>\n            <h4>{props.address}</h4>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"dish-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/dishes/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default DishItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport DishItem from './DishItem';\nimport Button from '../../shared/components/FormElements/Button';\n\nimport './DishList.css';\n\nconst DishList = props => {\n    if (props.items.length === 0) {\n        return (\n            <div className=\"dish-list center\">\n                <Card>\n                    <h2>No dishes found.  Maybe create one?</h2>\n                    <Button to=\"/dishes/new\">Share Dish</Button>\n                </Card>\n            </div>\n        );\n    }\n\n    return (\n        <ul className=\"dish-list\">\n            {props.items.map(dish => (\n                <DishItem \n                key={dish.id} \n                id={dish.id} \n                image={dish.image} \n                title={dish.title}\n                name={dish.name}\n                stars={dish.stars} \n                description={dish.description} \n                address={dish.address} \n                creatorId={dish.creator} \n                coordinates={dish.location}\n                onDelete={props.onDeleteDish}\n                />\n            ))}\n        </ul>\n    );\n};\n\nexport default DishList;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport DishList from '../components/DishList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserDishes = () => {\n    const [loadedDishes, setLoadedDishes] = useState();\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n    const userId = useParams().userId;\n\n    useEffect(() => {\n        const fetchDishes = async () => {\n            try {\n                const responseData = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/dishes/user/${userId}`\n                );\n                setLoadedDishes(responseData.dishes);\n            } catch (err) {}\n        };\n        fetchDishes();\n    }, [sendRequest, userId]);\n\n    const dishDeletedHandler = (deletedDishId) => {\n        setLoadedDishes(prevDishes => prevDishes.filter(dish => dish.id !== deletedDishId)\n        );\n    };\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            {isLoading && (\n                <div className=\"center\">\n                <LoadingSpinner />\n                </div>\n            )}\n            {!isLoading && loadedDishes && (<DishList items={loadedDishes} onDeleteDish={dishDeletedHandler} />)}\n        </React.Fragment>\n    )\n\n};\n\nexport default UserDishes;","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { \n    VALIDATOR_REQUIRE, \n    VALIDATOR_MINLENGTH \n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './DishForm.css';\n\nconst UpdateDish = () => {\n    const auth = useContext(AuthContext);\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    const [loadedDish, setLoadedDish] = useState();\n    const dishId = useParams().dishId;\n    const history = useHistory();\n    \n    const [formState, inputHandler, setFormData] = useForm(\n        {\n        title: {\n            value: '',\n            isValid: false\n        },\n        description: {\n            value: '',\n            isValid: false\n        }\n    }, \n    false\n    );\n    \n    useEffect(() => {\n        const fetchDish = async () => {\n            try {\n                const responseData = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/dishes/${dishId}`\n                );\n                setLoadedDish(responseData.dish);\n                setFormData(\n                    {\n                        title: {\n                            value: responseData.dish.title,\n                            isValid: true\n                        },\n                        description: {\n                            value: responseData.dish.description,\n                            isValid: true\n                        }\n                    }, \n                    true\n                );\n            } catch (err) {}\n        };\n        fetchDish();\n    }, [sendRequest, dishId, setFormData]);\n        \n    const dishUpdateSubmitHandler = async event => {\n        event.preventDefault();\n        try {\n            await sendRequest(\n                `${process.env.REACT_APP_BACKEND_URL}/dishes/${dishId}`,\n                'PATCH',\n                JSON.stringify({\n                    title: formState.inputs.title.value,\n                    description: formState.inputs.description.value\n                }),\n                {\n                    'Content-Type': 'application/json',\n                    Authorization: 'Bearer ' + auth.token\n                }\n            );\n            history.push('/' + auth.userId + '/dishes');\n        } catch (err) {}\n    };\n\n    if (isLoading) {\n        return (\n            <div className=\"center\">\n                <LoadingSpinner />\n            </div>\n        );\n    }\n\n    if (!loadedDish && !error) {\n        return (\n            <div className=\"center\">\n                <Card>\n                    <h2>Could not find dish!</h2>\n                </Card>\n            </div>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            {!isLoading && loadedDish && (\n                <form className=\"dish-form\" onSubmit={dishUpdateSubmitHandler}>\n                <Input\n                    id=\"title\"\n                    element=\"input\"\n                    type=\"text\" \n                    label=\"Title\" \n                    validators={[VALIDATOR_REQUIRE()]} \n                    errorText=\"Please enter a valid title.\"\n                    onInput={inputHandler}\n                    initialValue={loadedDish.title}\n                    initialValid={true}\n                />\n                <Input\n                    id=\"description\"\n                    element=\"textarea\"\n                    label=\"Description\" \n                    validators={[VALIDATOR_MINLENGTH(5)]} \n                    errorText=\"Please enter a valid description (min. 5 characters).\"\n                    onInput={inputHandler}\n                    initialValue={loadedDish.description}\n                    initialValid={true}\n                />\n                <Button type=\"submit\" disabled={!formState.isValid}>\n                    UPDATE PLACE\n                </Button>\n            </form>\n            )}\n    </React.Fragment>\n    );\n};\n\nexport default UpdateDish;","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n    VALIDATOR_EMAIL, \n    VALIDATOR_MINLENGTH,\n    VALIDATOR_REQUIRE \n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n    const auth = useContext(AuthContext);\n    const [isLoginMode, setIsLoginMode] = useState(true);\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n    const [formState, inputHandler, setFormData] = useForm(\n        {\n            email: {\n                value: '',\n                isValid: false\n            },\n            password: {\n                value: '',\n                isValid: false\n            }\n        },\n        false\n    );\n\n    const switchModeHandler = () => {\n        if (!isLoginMode) {\n            setFormData(\n                {\n                    ...formState.inputs,\n                    name: undefined,\n                    image: undefined\n                }, \n                formState.inputs.email.isValid && formState.inputs.password.isValid\n                );\n            } else {\n                setFormData(\n                    {\n                    ...formState.inputs,\n                    name: {\n                        value: '',\n                        isValid: false\n                    },\n                    image: {\n                        value: null,\n                        isValid: false\n                    }\n                },\n                false\n            ); \n        }\n        setIsLoginMode(prevMode => !prevMode);\n    };\n\n    const authSubmitHandler = async event => {\n        event.preventDefault();\n\n        if (isLoginMode) {\n            try {\n                const responseData = await sendRequest(\n                    process.env.REACT_APP_BACKEND_URL + '/users/login', \n                    'POST',\n                    JSON.stringify({\n                        email: formState.inputs.email.value,\n                        password: formState.inputs.password.value\n                    }),\n                    {\n                    'Content-Type': 'application/json'\n                    }\n            );\n                auth.login(responseData.userId, responseData.token);\n            } catch (err) {}\n        } else { \n            try {\n                const formData = new FormData();\n                formData.append('email', formState.inputs.email.value);\n                formData.append('name', formState.inputs.name.value);\n                formData.append('password', formState.inputs.password.value);\n                formData.append('image', formState.inputs.image.value);\n                const responseData = await sendRequest(\n                    process.env.REACT_APP_BACKEND_URL + '/users/signup',\n                    'POST',\n                    formData\n                );\n\n                auth.login(responseData.userId, responseData.token);\n                } catch (err) {}\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            <Card className=\"authentication\">\n            {isLoading && <LoadingSpinner asOverlay />}\n            <h2>Login Required</h2>\n            <hr />\n            <form onSubmit={authSubmitHandler}>\n                {!isLoginMode && (\n                    <Input \n                        element=\"input\" \n                        id=\"name\" \n                        type=\"text\" \n                        label=\"Your Name\" \n                        validators={[VALIDATOR_REQUIRE()]} \n                        errorText=\"Please enter a name.\"\n                        onInput={inputHandler}\n                    />\n                )}\n                {!isLoginMode && (\n                    <ImageUpload \n                    center \n                    id=\"image\" \n                    onInput={inputHandler} \n                    errorText=\"Please provide an image.\"\n                    />\n                )}\n                <Input\n                    element=\"input\"\n                    id=\"email\"\n                    type=\"email\"\n                    label=\"E-Mail\"\n                    validators={[VALIDATOR_EMAIL()]}\n                    errorText=\"Please enter a valid email address.\"\n                    onInput={inputHandler}\n                />\n                <Input\n                    element=\"input\"\n                    id=\"password\"\n                    type=\"password\"\n                    autocomplete=\"current-password\"\n                    label=\"Password\"\n                    validators={[VALIDATOR_MINLENGTH(8)]}\n                    errorText=\"Please enter a valid password, at least 8 characters.\"\n                    onInput={inputHandler}\n                />\n                <Button type=\"submit\" disabled={!formState.isValid}>\n                    {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n                </Button>\n            </form>\n            <Button inverse onClick={switchModeHandler}>\n                SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n            </Button>\n        </Card>\n    </React.Fragment>\n    );\n};\n\nexport default Auth;\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n    return <header className=\"main-header\">\n        {props.children}\n    </header>;\n};\n\nexport default MainHeader;","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n    const auth = useContext(AuthContext);\n\n    return (\n        <ul className=\"nav-links\">\n            <li>\n                <NavLink to=\"/\" exact>\n                ALL USERS\n                </NavLink>\n            </li>\n            {auth.isLoggedIn && (\n                <li>\n                    <NavLink to={`/${auth.userId}/dishes`}>MY DISHES</NavLink>\n                </li>\n            )}\n            {auth.isLoggedIn && (\n                <li>\n                    <NavLink to=\"/dishes/new\">ADD DISH</NavLink>\n                </li>\n            )}\n            {!auth.isLoggedIn && (\n                <li>\n                    <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n                </li>\n            )}\n            {auth.isLoggedIn && (\n                <li>\n                    <button onClick={auth.logout}>LOGOUT</button>\n                </li>\n            )}\n        </ul>\n    );\n};\n\nexport default NavLinks;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n    const content = \n        <CSSTransition\n        in={props.show}\n        timeout={200}\n        classNames=\"slide-in-left\"\n        mountOnEnter\n        unmountOnExit\n        >\n            <aside className='side-drawer' onClick={props.onClick}>{props.children} </aside>\n        </CSSTransition>\n\n    return ReactDOM.createPortal(content, document.getElementById('drawer-hook'))\n};\n\nexport default SideDrawer;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\n\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n    const openDrawerHandler = () => {\n        setDrawerIsOpen(true);\n    };\n    const closeDrawerHandler = () => {\n        setDrawerIsOpen(false);\n    };\n\n    return (\n        <React.Fragment>\n            {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n                <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n                    <nav className=\"main-navigation__drawer-nav\">\n                        <NavLinks />\n                    </nav>\n                    </SideDrawer>\n            <MainHeader>\n                <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\n                    <span />\n                    <span />\n                    <span />\n                </button>\n                <h1 className=\"main-navigation__title\">\n                    <Link to=\"/\">Your Places</Link>\n                </h1>\n                <nav className=\"main-navigation__header-nav\">\n                    <NavLinks />\n                </nav>\n            </MainHeader>\n        </React.Fragment>\n    );\n};\n\nexport default MainNavigation;","import React from 'react';\nimport { \n  BrowserRouter as Router, \n  Route, \n  Redirect, \n  Switch \n} from 'react-router-dom';\n\nimport Users from './user/pages/Users';\nimport NewDish from './dishes/pages/NewDish';\nimport UserDishes from './dishes/pages/UserDishes';\nimport UpdateDish from './dishes/pages/UpdateDish';\nimport Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n  let routes;\n  \n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users /> \n        </Route>\n        <Route path=\"/:userId/dishes\" exact>\n          <UserDishes />\n        </Route>\n        <Route path=\"/dishes/new\" exact>\n          <NewDish />\n        </Route>\n        <Route path=\"/dishes/:dishId\">\n          <UpdateDish />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users /> \n        </Route>\n        <Route path=\"/:userId/dishes\" exact>\n          <UserDishes />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth /> \n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n    return (\n      <AuthContext.Provider \n      value={{\n        isLoggedIn: !!token, \n        token: token, \n        userId: userId, \n        login: login, \n        logout: logout \n        }}\n      >\n        <Router>\n          <MainNavigation />\n            <main>{routes}</main>\n        </Router>\n    </AuthContext.Provider>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}